#version 450
#extension GL_KHR_shader_subgroup_basic: enable
#extension GL_KHR_shader_subgroup_ballot: enable
#extension GL_KHR_shader_subgroup_arithmetic: enable
#extension GL_KHR_shader_subgroup_vote: enable
#extension GL_EXT_debug_printf : require


#define TotalThreadsX gl_NumWorkGroups.x * gl_WorkGroupSize.x
#define TotalThreadsY gl_NumWorkGroups.y * gl_WorkGroupSize.y
#define TotalThreadsZ gl_NumWorkGroups.z * gl_WorkGroupSize.z
#define TotalThreads TotalThreadsX * TotalThreadsY * TotalThreadsZ
#define ITEM_PER_THREAD input/(TotalThreads)

layout(set = 0, binding = 0) buffer Keys
{
    uint keys[];
};

layout(push_constant) Constants{
    const int n;
};

layout(local_size_x = 1) in;


int k_CountUnique(){
    if (n == 0){
        return 0;
    }
  int j = 0;
  for (int i = 1; i < n; ++i) {
    if (keys[i] != keys[j]) {
      ++j;
      keys[j] = keys[i];
    }
  }

  return j + 1;
    
}

void main(){}