#version 450
#extension GL_KHR_shader_subgroup_basic: enable
#extension GL_KHR_shader_subgroup_ballot: enable
#extension GL_KHR_shader_subgroup_arithmetic: enable
#extension GL_KHR_shader_subgroup_vote: enable
#extension GL_EXT_shader_explicit_arithmetic_types_int8:enable

#define IDX gl_GlobalInvocationID.x
#define STRIDE gl_WorkGroupSize.x * gl_NumWorkGroups.x

layout(set = 0, binding = 0 ) buffer PrefixN{
    uint8_t prefix_n[];
};

layout(set = 0, binding = 1 ) buffer Parent{
    int parent[];
};

layout(set = 0, binding = 2 ) buffer EdgeCount{
    int edge_count[];
};

layout (push_constant) uniform Constant{
    int n_brt_nodes;
};

layout(local_size_x = 512) in;

void countEdges(){
    /*
    int startIdx = int(gl_GlobalInvocationID.x * ITEM_PER_THREAD);
    int endIdx = int(min(startIdx + ITEM_PER_THREAD, n_brt_nodes));
    */
    for(int i = int(IDX); i < n_brt_nodes; i += int(STRIDE)){
        int my_depth = prefix_n[i]/3;
        int parent_depth = prefix_n[parent[i]]/3;
        edge_count[i] = my_depth - parent_depth;

    }
}


void main(){
    countEdges();
}
